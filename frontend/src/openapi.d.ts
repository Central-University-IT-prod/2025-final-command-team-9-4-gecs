/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/business/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Регистрация нового бизнес-аккаунта
         * @description Регистрирует новый бизнес-аккаунт в системе и возвращает токен
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BusinessRegister"];
                };
            };
            responses: {
                /** @description Успешная регистрация бизнес аккаунта */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BusinessToken"];
                    };
                };
                400: components["responses"]["Response400"];
                409: components["responses"]["Response409"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Вход в аккаунт бизнеса.
         * @description Получение нового токена по логину и паролю.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        email?: string;
                        password?: string;
                    };
                };
            };
            responses: {
                /** @description Успешный вход в бизнес аккаунт */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BusinessToken"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение данных бизнеса */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное получение данных бизнеса */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BusinessInfo"];
                    };
                };
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Изменение данных бизнеса */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["BusinessRegister"];
                };
            };
            responses: {
                /** @description Успешное изменение данных бизнеса */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BusinessInfo"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        trace?: never;
    };
    "/api/business/info/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Добавить изображение в профиль */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        file?: string;
                    };
                };
            };
            responses: {
                /** @description Картинка добавлена. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Image"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/check_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Получение информации о паре программа - пользователь */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Временный токен идентификации карточки пользователя */
                        token?: string;
                    };
                };
            };
            responses: {
                /** @description Успешное получение информации */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramClientScheme"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/{id}/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить изображение бизнеса */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Картинка */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "image/png": unknown;
                    };
                };
                /** @description Нет картинки */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/programs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение программ бизнеса */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное получение программ бизнеса */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramGet"][];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business/redeem_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Зачисление баллов на карточку пользователя */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Временный токен идентификации карточки пользователя */
                        token?: string;
                    };
                };
            };
            responses: {
                /** @description Успешное зачисление */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
                403: components["responses"]["Response403"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clients/new": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Создание нового пользователя
         * @description Создание нового аккаунта пользователя без данных
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное создание нового пользователя */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            token?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clients/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение профиля пользователя */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное получение профиля */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ClientProfile"];
                    };
                };
                /** @description Профиль пользователя пуст */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Изменение профиля пользователя */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ClientEdit"];
                };
            };
            responses: {
                /** @description Успешное изменение профиля */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ClientProfile"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
                403: components["responses"]["Response403"];
            };
        };
        trace?: never;
    };
    "/api/clients/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Аунтефикация пользователя */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ClientLogin"];
                };
            };
            responses: {
                /** @description Успешная аунтефикация */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            token?: string;
                        };
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clients/get_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение токена идентификации пользователя */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное получение временного токена идентификации */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name?: string;
                            token?: string;
                        };
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/clients/get_programs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение открытых программ лояльности */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Программы лояльности, открытые у клиента */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramClientSchemeFeed"][];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/programs/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Создание программы лояльности */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProgramAdd"];
                };
            };
            responses: {
                /** @description Успешное создание программы лояльности */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramGet"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/programs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получение программы по ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Успешное получение программы лояльности */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramGet"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
                403: components["responses"]["Response403"];
                404: components["responses"]["Response404"];
            };
        };
        put?: never;
        post?: never;
        /** Удаление программы лояльности */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Программа успешно удалена */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
                403: components["responses"]["Response403"];
                404: components["responses"]["Response404"];
            };
        };
        options?: never;
        head?: never;
        /** Редактирование программы лояльности */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProgramAdd"];
                };
            };
            responses: {
                /** @description Успешное редактирование программы лояльности */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProgramGet"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
                403: components["responses"]["Response403"];
                404: components["responses"]["Response404"];
            };
        };
        trace?: never;
    };
    "/api/statistics/business": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Выводит статистику бизнеса */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Статистика */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["StatisticsBusiness"];
                    };
                };
                400: components["responses"]["Response400"];
                401: components["responses"]["Response401"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Обьект, представляющий поле регистрации для бизнеса */
        BusinessRegister: {
            /** @description Уникальная почта бизнес аккаунта */
            email?: string;
            /** @description Пароль бизнес аккаунта */
            password?: string;
            /** @description Название партнёра */
            name?: string;
            /** @description Описание бизнеса партнёра */
            description?: string;
            /** @description Гипотетическая локация партнёра */
            location?: string;
        };
        /** @description Обьект, представляющий поле изменения параметров партнёра */
        BusinessInfo: {
            /** @description Уникальный логин бизнес аккаунта */
            email?: string;
            /** @description Название партнёра */
            name?: string;
            /** @description Описание бизнеса партнёра */
            description?: string;
            /** @description Гипотетическая локация партнёра */
            location?: string;
        };
        /** @description Обьект, представляющий информацию о токене и UUID партнёра */
        BusinessToken: {
            /** @description Уникальный токен сессии бизнеса */
            token?: string;
        };
        /** @description Объект, позволяющий произвести аунтефикацию пользователя */
        ClientLogin: {
            email: string;
            password: string;
        };
        /** @description Обьект, представляющий информацию о профиле пользователя */
        ClientEdit: {
            name: string;
            email: string;
            gender: string;
            location: string;
            password: string;
            age: number;
        };
        /** @description Обьект, представляющий информацию о профиле пользователя */
        ClientProfile: {
            name: string;
            email: string;
            gender: string;
            location: string;
            age: number;
        };
        /** @description Обьект, представляющий программу лояльности */
        ProgramAdd: {
            name?: string;
            type?: string;
            points_per_activation?: number;
            target?: number;
            reward?: string;
            max_claims?: number;
        };
        /** @description Обьект, представляющий картинку */
        Image: {
            /**
             * Format: uuid
             * @description Уникальный идентификатор картинки (UUID).
             */
            image_id?: string;
        };
        /** @description Обьект, представляющий программу лояльности */
        ProgramGet: {
            /** Format: uuid4 */
            id?: string;
            name?: string;
            type?: string;
            points_per_activation?: number;
            target?: number;
            reward?: string;
            max_claims?: number;
        };
        /** @description Обьект, представляющий пару программа - пользователь */
        ProgramClientScheme: {
            name?: string;
            points_per_activation?: number;
            redeemable?: boolean;
            target?: number;
            reward?: string;
            points?: number;
        };
        /** @description Обьект, представляющий пару программа - пользователь */
        ProgramClientSchemeFeed: {
            business_name?: string;
            /** Format: uuid4 */
            business_id?: string;
            name?: string;
            type?: string;
            target?: number;
            reward?: string;
            points?: number;
        };
        /** @description Обьект, представляющий статистику */
        StatisticsBusiness: {
            total_rewarded?: number;
            total_points?: number;
            total_clients?: number;
            male_count?: number;
            female_count?: number;
            children?: number;
            youngsters?: number;
            middle_aged?: number;
            old?: number;
            very_old?: number;
        };
    };
    responses: {
        /** @description Ошибка в данных запроса. */
        Response400: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Bad request */
                    detail?: string;
                };
            };
        };
        /** @description Запрашиваемый обьект не найден. */
        Response404: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Not Found */
                    detail?: string;
                };
            };
        };
        /** @description Запрашиваемый обьект найден и не может быть заменён */
        Response409: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Conflict */
                    detail?: string;
                };
            };
        };
        /** @description У вас нет доступа */
        Response403: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Forbidden */
                    detail?: string;
                };
            };
        };
        /** @description Вы не авторизованы */
        Response401: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Unauthorized */
                    detail?: string;
                };
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
